<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Brandon Clapp</title>
    <description>Web Developer &amp; Designer
</description>
    <link>http://brandonclapp.com/</link>
    <atom:link href="http://brandonclapp.com/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sun, 29 May 2016 21:47:35 -0500</pubDate>
    <lastBuildDate>Sun, 29 May 2016 21:47:35 -0500</lastBuildDate>
    <generator>Jekyll v3.1.3</generator>
    
      <item>
        <title>Git Reference: Useful Commands &amp; Overview</title>
        <description>&lt;p&gt;This guide is not intended to be a comprehensive resource, but merely an overview and reference for myself. If you feel that you can contribute helpful commands or improve this reference guide, let me know in the comments.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#terminology&quot;&gt;Terminology&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#setup-basics&quot;&gt;Setup &amp;amp; basics&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#adding-files-to-staging&quot;&gt;Adding files to staging&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#removing-files-from-staging&quot;&gt;Removing files from staging&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#undoing-changes&quot;&gt;Undoing changes&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#creating-a-commit&quot;&gt;Creating a commit&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#undoing-a-commit&quot;&gt;Undoing a commit&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#amending-to-a-commit&quot;&gt;Amending to a commit&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#viewing-commit-history&quot;&gt;Viewing commit history&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#check-file-modifications&quot;&gt;Check file modifications (diff)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#managing-remotes&quot;&gt;Managing remotes&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#pushing-to-remote-repositories&quot;&gt;Pushing to remote repositories&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#getting-changes-from-a-remote-repository&quot;&gt;Getting changes from a remote repository&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#cloning-a-remote-repository&quot;&gt;Cloning a remote repository&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#branching-merging&quot;&gt;Branching &amp;amp; merging&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#tagging&quot;&gt;Tagging&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#rebase&quot;&gt;Rebase&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Git can be a very powerful tool for developers if they know what they’re doing, However, if they don’t, the workflow feels more like an obstacle. Although I agree that it can take a bit to understand the fundamentals of git, I strongly believe that learning it is a great investment. Lets start with some basic terminology. Don’t get discouraged if you don’t understand them right now.&lt;/p&gt;

&lt;h3 id=&quot;terminologyterminologynameterminology&quot;&gt;&lt;a href=&quot;#terminology&quot; name=&quot;terminology&quot;&gt;Terminology&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Commit:&lt;/strong&gt; A snapshot of changes to files that have been modified. Before making a commit, the files must be &lt;em&gt;staged&lt;/em&gt;. This means that they must be tracked and added to the staging area by using the &lt;code class=&quot;highlighter-rouge&quot;&gt;git add &amp;lt;filename&amp;gt;&lt;/code&gt; command.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Staging:&lt;/strong&gt; Before making a commit, tracked files must be &lt;em&gt;staged&lt;/em&gt;. Modified, deleted, added, or moved files that are &lt;em&gt;tracked&lt;/em&gt; are eligible to be staged. The &lt;code class=&quot;highlighter-rouge&quot;&gt;git add&lt;/code&gt; command can be used to stage these modifications. Once staged, the staged files are eligible to be committed with the &lt;code class=&quot;highlighter-rouge&quot;&gt;git commit&lt;/code&gt; command.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tracked file/folder:&lt;/strong&gt; A file or folder that your git repository knows to watch for modifications on/in. Files can be untracked by adding them to a &lt;strong&gt;.gitignore&lt;/strong&gt; file.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Remote repository:&lt;/strong&gt; Because git is a distributed source control system, source control for the same project can reside in many different places at once. For this reason, any repository that is located remotely (i.e. on github) is considered to be a remote repository. Remote repository’s can be cloned (copied) locally, creating a local copy of the repository known as a local repository. Once changes are made in the local repository, you can push changes back up to the remote repository, where other collaborators on the project will be able to see your changes.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Local repository:&lt;/strong&gt; The opposite of remote. This is the repository as it lives locally. You can &lt;em&gt;clone&lt;/em&gt; a remote repository locally or use &lt;code class=&quot;highlighter-rouge&quot;&gt;git init&lt;/code&gt; to initialize a local repository. Local repositories can be linked to remote repositories.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;HEAD:&lt;/strong&gt; In git, HEAD refers to the last commit on the current branch.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Clone:&lt;/strong&gt; The process of pulling the source code from a repository hosted remotely to your local machine, creating a local repository, and then associating that local repository with the remote that it was pulled/cloned from.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Branch:&lt;/strong&gt; A branch can be thought of as an alternate timeline for your repository’s code. When initializing or cloning a repository, a master branch will be created. Creating a new branch will house commits (snapshotted changes) that are not present on the master branch until they are eventually merged back in.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Fast-forward:&lt;/strong&gt; When merging, if the target branch (where you’re merging &lt;strong&gt;to&lt;/strong&gt;) does not contain commits outside of those from the incoming source branch (where you’re merging &lt;strong&gt;from&lt;/strong&gt;), then the target can simply “fast-forward” it’s HEAD to the latest commit on the source branch once it is merged.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Recursive merge:&lt;/strong&gt; When merging, unlike the fast forward, if the target branch contains commits not included by the source branch, a recursive strategy is needed. This will merge all commits into the single target branch and then create a single “merge commit” stating that the branches have merged back together.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tags:&lt;/strong&gt; Tags are references to specific commits and can be useful for specifying the state of your project at any given point. For example, a tag called v1.0 could be created to represent a specific version of the project and make it easier to reference this commit rather than remembering a commit identifier.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Rebase:&lt;/strong&gt; Can be used to integrate changes from one branch to another, much like merge. Rebase will do 3 things.
- Move all commits that are on the current local branch to a temporary area.
- Add all of the commits from the specified source branch (from branch) to the current branch.
- Add all of the commits from the aforementioned temporary area back onto the current branch.&lt;/p&gt;

&lt;h3 id=&quot;setup--basicssetup-basicsnamesetup-basics&quot;&gt;&lt;a href=&quot;#setup-basics&quot; name=&quot;setup-basics&quot;&gt;Setup &amp;amp; Basics&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git init&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Initializes a local git repository&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git config --global user.name &quot;Brandon Clapp&quot;&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Sets the global git user name to be used when making commits.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git config --global user.email me@myemail.com&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Sets the global git email to be used when making commits.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git config --global color.ui true&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Sets the global git setting for adding pretty colors on command line&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git status&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Check which tracked files have been modified since the last commit, as well as untracked files..&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;adding-files-to-stagingadding-files-to-stagingnameadding-files-to-staging&quot;&gt;&lt;a href=&quot;#adding-files-to-staging&quot; name=&quot;adding-files-to-staging&quot;&gt;Adding files to staging&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git add .&lt;/code&gt;&lt;/strong&gt; or &lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git add --all&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Add all files and folders that are part of your current working directory to the staging area.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git add &amp;lt;filename&amp;gt;&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Add a single file to the staging area.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git add &amp;lt;list of files&amp;gt;&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Adds multiple files. Files are delimited by spaces.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git add *.&amp;lt;ext&amp;gt;&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Adds all files with the provided extension to the staging area. i.e. &lt;code class=&quot;highlighter-rouge&quot;&gt;git add *.txt&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git add &amp;lt;folder&amp;gt;/*.&amp;lt;ext&amp;gt;&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Adds all files in the docs folder with a &lt;em&gt;.txt&lt;/em&gt; extension to the staging area. i.e. &lt;code class=&quot;highlighter-rouge&quot;&gt;git add docs/*.txt&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git add &quot;*.&amp;lt;ext&amp;gt;&quot;&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Adds all files of a the provided extension in &lt;em&gt;the whole project&lt;/em&gt; to the staging area.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git add &amp;lt;foldername&amp;gt;&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Add a single folder and all associated modified files/folders in that folder to the staging area.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;removing-files-from-stagingremoving-files-from-stagingnameremoving-files-from-staging&quot;&gt;&lt;a href=&quot;#removing-files-from-staging&quot; name=&quot;removing-files-from-staging&quot;&gt;Removing files from staging&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git reset HEAD &amp;lt;file&amp;gt;&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Removes the file from staging, but keeps any modifications made to that file.&lt;/p&gt;

&lt;h3 id=&quot;undoing-changesundoing-changesnameundoing-changes&quot;&gt;&lt;a href=&quot;#undoing-changes&quot; name=&quot;undoing-changes&quot;&gt;Undoing changes&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git checkout -- &amp;lt;file&amp;gt;&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Undo all changes to a specific file. i.e. &lt;code class=&quot;highlighter-rouge&quot;&gt;git checkout -- README.md&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git checkout .&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Undo all changes for all tracked files and folders in the current working directory&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git reset --hard HEAD&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Undo all changes for all files and folders (including untracked) back to the HEAD commit.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;creating-a-commitcreating-a-commitnamecreating-a-commit&quot;&gt;&lt;a href=&quot;#creating-a-commit&quot; name=&quot;creating-a-commit&quot;&gt;Creating a commit&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git commit -m &quot;Create a README.&quot;&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Creates a commit of all files that are currently in the staging area.&lt;/p&gt;

&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;-m&lt;/code&gt; flag followed by “Create a README” represents the message that will be associated with the commit, or the &lt;em&gt;commit message&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Once committed, this “snapshot” of changes is added to the top of your timeline tree.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git commit -a -m &quot;My commit message.&quot;&lt;/code&gt;&lt;/strong&gt; or &lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git commit -am &quot;My commit message.&quot;&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Add all tracked files in the current working directory to staging &lt;strong&gt;and&lt;/strong&gt; commit them with the message &lt;em&gt;My commit message&lt;/em&gt; in a single step. This however, does not include untracked files.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;undoing-a-commitundoing-a-commitnameundoing-a-commit&quot;&gt;&lt;a href=&quot;#undoing-a-commit&quot; name=&quot;undoing-a-commit&quot;&gt;Undoing a commit&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git reset --soft HEAD^&lt;/code&gt;&lt;/strong&gt; (potentially dangerous)&lt;/p&gt;

&lt;p&gt;Undo the last commit (HEAD) and move everything from that commit back into staging on the commit before it (HEAD^).&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Caution:&lt;/em&gt; Never do this when the commit has already been pushed to a remote repository. Rewriting history is dangerous.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git reset --hard HEAD^&lt;/code&gt;&lt;/strong&gt; (potentially dangerous)&lt;/p&gt;

&lt;p&gt;Undo last commit and all pending changes to tracked files.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Caution:&lt;/em&gt; Never do this when the commit has already been pushed to a remote repository. Rewriting history is dangerous.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git reset --hard HEAD^^&lt;/code&gt;&lt;/strong&gt; (potentially dangerous)&lt;/p&gt;

&lt;p&gt;Undo last 2 commits and all pending changes to tracked files.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Caution:&lt;/em&gt; Never do this when the commit has already been pushed to a remote repository. Rewriting history is dangerous.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;amending-to-a-commitamending-to-a-commitnameamending-to-a-commit&quot;&gt;&lt;a href=&quot;#amending-to-a-commit&quot; name=&quot;amending-to-a-commit&quot;&gt;Amending to a commit&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git commit --amend -m &quot;My new commit message&quot;&lt;/code&gt;&lt;/strong&gt; (potentially dangerous)&lt;/p&gt;

&lt;p&gt;Add to the last commit. Optionally, a new commit message can be provided with &lt;code class=&quot;highlighter-rouge&quot;&gt;-m&lt;/code&gt;, which will overwrite the previous commit message.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Caution:&lt;/em&gt; Never do this when the commit has already been pushed to a remote repository. Rewriting history is dangerous.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;viewing-commit-historyviewing-commit-historynameviewing-commit-history&quot;&gt;&lt;a href=&quot;#viewing-commit-history&quot; name=&quot;viewing-commit-history&quot;&gt;Viewing commit history&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git log&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Shows the latest commits and information about them, including their commit message and date.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;check-file-modificationscheck-file-modificationsnamecheck-file-modifications&quot;&gt;&lt;a href=&quot;#check-file-modifications&quot; name=&quot;check-file-modifications&quot;&gt;Check file modifications&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git diff&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Show unstaged differences since last commit.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git diff --staged&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Show differences on staged files since last commit.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;managing-remotesmanaging-remotesnamemanaging-remotes&quot;&gt;&lt;a href=&quot;#managing-remotes&quot; name=&quot;managing-remotes&quot;&gt;Managing remotes&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git remote add &amp;lt;remote_name&amp;gt; &amp;lt;repo_url&amp;gt;&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Associates a local repository with a remote repository.&lt;/p&gt;

&lt;p&gt;Where &lt;em&gt;remote_name&lt;/em&gt; represents any arbitrary name that you would like to reference the remote repository by (origin is commonly used) and &lt;em&gt;repo_url&lt;/em&gt; represents the URL to your remote repository, which can be found on your remote hosting provider (i.e. github or bitbucket)&lt;/p&gt;

&lt;p&gt;i.e. &lt;code class=&quot;highlighter-rouge&quot;&gt;git remote add origin https://github.com/BrandonClapp/process-editor.git&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git remote rm &amp;lt;remote_name&amp;gt;&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Removes a remote repository reference from our local repository.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git remote -v&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Check which remote repositories are associated/linked with a local repository.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git remote show &amp;lt;remote_name&amp;gt;&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Shows all remote branches and whether they’re being tracked by a corresponding local branch.&lt;/li&gt;
  &lt;li&gt;Shows which remote branch each local branch merges with for &lt;code class=&quot;highlighter-rouge&quot;&gt;git pull&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Shows which remote branch each local branch pushes to for &lt;code class=&quot;highlighter-rouge&quot;&gt;git push&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Shows if any local branch is out of date with it’s corresponding remote branch.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git push &amp;lt;remote_name&amp;gt; :&amp;lt;remote_branch&amp;gt;&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Deletes a &lt;em&gt;remote&lt;/em&gt; branch. However, the local branch will still exist. Remember to remove it with &lt;code class=&quot;highlighter-rouge&quot;&gt;git branch -d &amp;lt;local_branch&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git remote prune &amp;lt;remote_name&amp;gt;&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Removes references to stale/deleted remote branches.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;pushing-to-remote-repositoriespushing-to-remote-repositoriesnamepushing-to-remote-repositories&quot;&gt;&lt;a href=&quot;#pushing-to-remote-repositories&quot; name=&quot;pushing-to-remote-repositories&quot;&gt;Pushing to remote repositories&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git push &amp;lt;remote_name&amp;gt; &amp;lt;remote_branch&amp;gt;&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Pushes the currently checked out local branch to the specified remote branch on the remote repository. &lt;em&gt;remote_name&lt;/em&gt; is the same value that is provided when adding the remote, and, in most examples is referred to as &lt;em&gt;origin&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Optionally, the &lt;code class=&quot;highlighter-rouge&quot;&gt;-u&lt;/code&gt; flag can be provided to set the upstream, resulting in not having to provide the remote name and branch on subsequent pushes. i.e. &lt;code class=&quot;highlighter-rouge&quot;&gt;git push -u origin master&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;If the remote branch that you have specified does not exist in the remote repository, it will be created. This will also link the current local branch to the remote branch that is being pushed to and, as a result, will be the default upstream branch that will be used when simply running &lt;code class=&quot;highlighter-rouge&quot;&gt;git push&lt;/code&gt; without specifying a remote repository or branch.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;getting-changes-from-a-remote-repositorygetting-changes-from-a-remote-repositorynamegetting-changes-from-a-remote-repository&quot;&gt;&lt;a href=&quot;#getting-changes-from-a-remote-repository&quot; name=&quot;getting-changes-from-a-remote-repository&quot;&gt;Getting changes from a remote repository&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git pull &amp;lt;remote_name&amp;gt; &amp;lt;remote_branch&amp;gt;&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Gets the latest commits from the remote repository on the specified remote branch &lt;strong&gt;and&lt;/strong&gt; merges those changes into your current local branch.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git pull&lt;/code&gt; is the equivalent of performing the following actions
- &lt;code class=&quot;highlighter-rouge&quot;&gt;git fetch&lt;/code&gt;
- &lt;code class=&quot;highlighter-rouge&quot;&gt;git merge origin master&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git fetch&lt;/code&gt;&lt;/strong&gt; or &lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git fetch &amp;lt;remote_name&amp;gt;&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Fetch the latest information about the remote repository such as commits and remote branches. Unlike &lt;code class=&quot;highlighter-rouge&quot;&gt;git pull&lt;/code&gt;, this will not merge any commits into your current branch.&lt;/p&gt;

&lt;p&gt;Tip: After fetching the remote branch, you can easily create a local branch that is already tracking the remote branch by simply running &lt;code class=&quot;highlighter-rouge&quot;&gt;git checkout &amp;lt;remote_branch&amp;gt;&lt;/code&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;cloning-a-remote-repositorycloning-a-remote-repositorynamecloning-a-remote-repository&quot;&gt;&lt;a href=&quot;#cloning-a-remote-repository&quot; name=&quot;cloning-a-remote-repository&quot;&gt;Cloning a remote repository&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git clone &amp;lt;remote_url&amp;gt;&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Pulls the source code from a repository hosted remotely to your local machine, creating a local repository, and then associating that local repository with the remote that it was pulled/cloned from.&lt;/p&gt;

&lt;p&gt;This remote reference will be added as &lt;em&gt;origin&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git clone &amp;lt;remote_url&amp;gt; &amp;lt;local_folder_name&amp;gt;&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Clones the remote repository and puts it in the specified local folder rather than the default name of the repository.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;branching--mergingbranching-mergingnamebranching-merging&quot;&gt;&lt;a href=&quot;#branching-merging&quot; name=&quot;branching-merging&quot;&gt;Branching &amp;amp; Merging&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git branch &amp;lt;local_branch&amp;gt;&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Create a branch on the local repository. i.e. &lt;code class=&quot;highlighter-rouge&quot;&gt;git branch styling&lt;/code&gt; might be used for changing styles. This, however, will not change to that new branch.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git branch -d &amp;lt;local_branch&amp;gt;&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Deletes the specified local branch. i.e. &lt;code class=&quot;highlighter-rouge&quot;&gt;git branch -d styling&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git branch -D &amp;lt;local_branch&amp;gt;&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Deletes the specified local branch &lt;em&gt;and&lt;/em&gt; all un-pushed commits to a remote branch.&lt;/p&gt;

&lt;p&gt;This is helpful for when a remote branch has been deleted and you want to remove the local branch but have commits that were never pushed to the remote branch.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git branch&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Lists all of the current local branches. The current branch will be indicated by an asterisk, and optionally color formatted.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git branch -r&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Lists all &lt;em&gt;remote&lt;/em&gt; branches.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git checkout &amp;lt;local_branch&amp;gt;&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Checks out (changes to) the specified branch.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git checkout -b &amp;lt;local_branch&amp;gt;&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Both creates &lt;strong&gt;and&lt;/strong&gt; checks out (changes to) the branch specified. This is essentially a combination of &lt;code class=&quot;highlighter-rouge&quot;&gt;git branch &amp;lt;branch_name&amp;gt;&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;git checkout &amp;lt;branch_name&amp;gt;&lt;/code&gt; in a single command.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git merge &amp;lt;from_branch&amp;gt;&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This will merge the commits on a different local branch into the branch which we currently have checked out.&lt;/p&gt;

&lt;p&gt;For example, if I have committed 5 commits to a &lt;em&gt;styling&lt;/em&gt; branch and want to merge those back to the master branch, I would first ensure that I have the master branch checked out with &lt;code class=&quot;highlighter-rouge&quot;&gt;git checkout master&lt;/code&gt; and then merge the styling branch into master with &lt;code class=&quot;highlighter-rouge&quot;&gt;git merge styling&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Tip: Upon fixing a merge conflict, using &lt;code class=&quot;highlighter-rouge&quot;&gt;git commit -a&lt;/code&gt; will auto-generate a new commit message displaying the conflicted files that were resolved.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;taggingtaggingnametagging&quot;&gt;&lt;a href=&quot;#tagging&quot; name=&quot;tagging&quot;&gt;Tagging&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git tag&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;List all of the tags for the repository.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git checkout &amp;lt;tag_name&amp;gt;&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Checks out the commit that the tag represents. i.e. &lt;code class=&quot;highlighter-rouge&quot;&gt;git checkout v1.0&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git tag -a &amp;lt;tag_name&amp;gt; -m &quot;My tag description message.&quot;&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Creates a tag and provides it a message. i.e. &lt;code class=&quot;highlighter-rouge&quot;&gt;git tag -a beta3 -m &quot;it&#39;s beta, expect bugs!&quot;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git push --tags&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Pushes tags to the remote repository.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;rebaserebasenamerebase&quot;&gt;&lt;a href=&quot;#rebase&quot; name=&quot;rebase&quot;&gt;Rebase&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git rebase &amp;lt;from_branch&amp;gt;&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Applies the commits from the &lt;em&gt;from_branch&lt;/em&gt; onto the currently checked out local branch, and then applies any commits not present on the &lt;em&gt;from_branch&lt;/em&gt; on top of those.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git rebase --continue&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;When a merge conflict is detected from a rebasing, after fixing the conflict, this will continue the rebase process.&lt;/p&gt;

&lt;p&gt;Note: When a merge conflict occurs during a rebase, the result will be that you are no longer on a particular branch.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git rebase --skip&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;When a merge conflict is detected from rebasing, &lt;code class=&quot;highlighter-rouge&quot;&gt;--skip&lt;/code&gt; can be used to skip applying the commit that resulted in merge conflict to the rebase operation. (The commit from the target/current branch will not be applied)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git rebase --abort&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;When a merge conflict is detected from rebasing, use the &lt;code class=&quot;highlighter-rouge&quot;&gt;--abort&lt;/code&gt; to abandon all hope and give up, resulting in the rebase operation being rolled back.&lt;/p&gt;
</description>
        <pubDate>Sun, 29 May 2016 00:00:00 -0500</pubDate>
        <link>http://brandonclapp.com/git/git-reference-useful-commands-overview</link>
        <guid isPermaLink="true">http://brandonclapp.com/git/git-reference-useful-commands-overview</guid>
        
        <category>Git</category>
        
        <category>GitHub</category>
        
        
        <category>Git</category>
        
      </item>
    
      <item>
        <title>This is just a test post 8</title>
        <description>&lt;p&gt;You’ll find this post in your &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;To add new posts, simply add a file in the &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory that follows the convention &lt;code class=&quot;highlighter-rouge&quot;&gt;YYYY-MM-DD-name-of-post.ext&lt;/code&gt; and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;Tom&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints &#39;Hi, Tom&#39; to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href=&quot;http://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;

</description>
        <pubDate>Sun, 22 May 2016 13:21:41 -0500</pubDate>
        <link>http://brandonclapp.com/testing/this-is-just-a-test-post-8</link>
        <guid isPermaLink="true">http://brandonclapp.com/testing/this-is-just-a-test-post-8</guid>
        
        
        <category>testing</category>
        
      </item>
    
      <item>
        <title>Benefits of Socratic Dev Team Environments</title>
        <description>&lt;p&gt;A few reasons why you should never stop asking questions…&lt;/p&gt;

&lt;h3 id=&quot;theres-always-room-to-grow&quot;&gt;There’s always room to grow&lt;/h3&gt;

&lt;p&gt;As a developer, I’ve always taken the opportunity to absorb information from those who know more about particular subjects than I. Ultimately, no one knows everything and to think that one’s entire knowledge base can come from first hand experiences is absurd. Collaboration and the exchange of ideas is, in my opinion, what makes or breaks a development team.&lt;/p&gt;

&lt;p&gt;In the 1980s, the Sam Walton was arrested after crawling around in stores on his hands and knees. When Walton’s friends came to bail him out, he told them he’d been measuring aisle widths to determine exactly how they displayed their wares. If Sam Walton, the founder of the largest retailer in the world was willing to go to that length to learn from others then what’s your excuse?&lt;/p&gt;

&lt;h3 id=&quot;most-thingsare-highly-opinionated&quot;&gt;Most things are highly opinionated&lt;/h3&gt;

&lt;p&gt;…Especially in software. Most things published to the internet are cat pictures and highly opinionated rants. Unfortunately, most people don’t question the source or reasoning behind such information. When researching a new technology or concept, the first thing read immediately becomes cold hard fact. Once it’s read, it must be true.&lt;/p&gt;

&lt;p&gt;I fell into this trap last week where I read that JavaScript was multi-threaded when used with node.js. This, of course, is not true. After pondering on the idea for a while, I realized that the information that I had read didn’t add up. After having a discussion with co-workers, doing further research, and trying it on my own I had a more in depth understanding of it. Had I not have thought for myself, I would still be carrying incorrect knowledge, spreading misinformation to all who were also as ignorant of the topic as I.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/BrandonClapp/get-off-my-thread&quot; target=&quot;_blank&quot;&gt;https://github.com/BrandonClapp/get-off-my-thread&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;there-are-no-dumb-questions&quot;&gt;There are no dumb questions&lt;/h3&gt;

&lt;p&gt;There seems to be this idea that asking questions is only for the junior developer or “one who needs guidance”. I mean, a “senior” developer would never be caught asking “THAT” question, right!?&lt;/p&gt;

&lt;p&gt;Asking questions helps the development team grow together. Chances are you’re not the only person that has the question (and if you are, so what?). There are too many frameworks, libraries, tools, concepts, design patterns…etc in the software development scene, that a single developer simply can not keep up with every single one of them. That being said, even if they could, they certainly would not be an expert at them.&lt;/p&gt;

&lt;p&gt;Collaboration between developers is healthy. More info why it’s important:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Socratic_method&quot; target=&quot;_blank&quot;&gt;Socratic Method&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;sharpen-thy-bullshit-detector&quot;&gt;Sharpen thy bullshit detector&lt;/h3&gt;

&lt;p&gt;…Unless they have a reputable backing of followers or have a track record of typically being a reliable source. Just as asking questions is a natural function of being human, reading an introductory article online doesn’t make someone an expert. Going through a 5 minute interactive tutorial does not constitute knowing the in’s and out’s of every details. Eliminate people with such claims from your trusted sources. Also, upgrade your BS detector.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;In business and technology, jargon and obfuscation hide huge quantities of BS. Inflated language is a technique of intimidation. The bet is that if you don’t understand what they’re talking about, you’ll feel stupid, or distracted, and give in to the appearance of their superior knowledge. This is, of course, entirely bullshit. To withstand BS you have to have an inner core of self-reliance, holding on to your doubts longer than the BS’er holds onto their charade. - Scott Berkun&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Impostor_syndrome&quot; target=&quot;_blank&quot;&gt;https://en.wikipedia.org/wiki/Impostor_syndrome&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://scottberkun.com/essays/53-how-to-detect-bullshit/&quot; target=&quot;_blank&quot;&gt;http://scottberkun.com/essays/53-how-to-detect-bullshit/&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 16 Oct 2015 00:00:00 -0500</pubDate>
        <link>http://brandonclapp.com/benefits-of-socratic-dev-team-environments/</link>
        <guid isPermaLink="true">http://brandonclapp.com/benefits-of-socratic-dev-team-environments/</guid>
        
        
        <category>Development</category>
        
      </item>
    
      <item>
        <title>Many to many model relationships in Rails</title>
        <description>&lt;p&gt;One of the challenges I had early in learning Rails was setting up many-to-many relationships between models. Many tutorials and articles cover the simpler one-to-many and many-to-one relationships with ActiveRecord’s &lt;code class=&quot;highlighter-rouge&quot;&gt;has_many&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;belongs_to&lt;/code&gt; functions, respectively, but when trying to build anything more than a sample application you quickly realize that you need to set up slightly more complicated relationships.&lt;/p&gt;

&lt;h3 id=&quot;problem&quot;&gt;Problem&lt;/h3&gt;

&lt;p&gt;I want to set up a many to many relationship between my &lt;strong&gt;user&lt;/strong&gt; and &lt;strong&gt;team&lt;/strong&gt; models where &lt;u&gt;users can belong to many teams&lt;/u&gt; and &lt;u&gt;teams can contain many users&lt;/u&gt;. Prior to setting up the relationship, my models are just basic ActiveRecord models generated from the rails model generator.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;user.rb model (before)&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;User&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ActiveRecord&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Base&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;team.rb model (before)&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Team&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ActiveRecord&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Base&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;solution&quot;&gt;Solution&lt;/h3&gt;

&lt;p&gt;To enforce the many to many relationship, I chose to implement the one of the ways suggested by the &lt;a href=&quot;http://railscasts.com/episodes/47-two-many-to-many&quot; target=&quot;_blank&quot;&gt;RailsCast Many-to-Many screencast&lt;/a&gt;, which involves &lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;has_many :through&lt;/code&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;This approach involves creating another model specifically for handling the relationship mappings so that ActiveRecord can join the tables behind the scenes. Because I’m trying to join the users and teams table, I decided to name this model &lt;strong&gt;membership&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Running &lt;code class=&quot;highlighter-rouge&quot;&gt;rails g model membership user_id:integer team_id:integer&lt;/code&gt; will create a model and migration for the new membership model.&lt;/p&gt;

&lt;p&gt;Now, add lines 2 and 3 to set up the relationships to the user and team models.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;membership.rb model (after)&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Membership&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ActiveRecord&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Base&lt;/span&gt;
   &lt;span class=&quot;n&quot;&gt;belongs_to&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:user&lt;/span&gt;
   &lt;span class=&quot;n&quot;&gt;belongs_to&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:team&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The membership model with the relationships above will represent another table that will be used for storing mappings between the user and team models. For example, the table may include data such as:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Sample membership table data&lt;/strong&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;user_id&lt;/th&gt;
      &lt;th&gt;team_id&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;This sample data shows how the model can be used to look up many to many relationships.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;User 1 has many teams 1, 2, and 3&lt;/li&gt;
  &lt;li&gt;Team 1 has many users 1, 2, 3, and 4&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Meow, we can associate both the user and team models to have many memberships. In addition, we can use a &lt;code class=&quot;highlighter-rouge&quot;&gt;has_many&lt;/code&gt; override to tell active record that “a user has_many teams through the memberships model” and “a team has_many users through the memberships model”.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;user.rb (after)&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;User&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ActiveRecord&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Base&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;has_many&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:memberships&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:dependent&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:destroy&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;has_many&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:teams&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;through: :memberships&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;team.rb (after)&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Team&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ActiveRecord&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Base&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;has_many&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:memberships&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:dependent&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:destroy&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;has_many&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:users&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;through: :memberships&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Now that the relationships are set up, assuming that you have ran &lt;code class=&quot;highlighter-rouge&quot;&gt;rake db:migrate&lt;/code&gt; to sync the new membership model, each model should be able to take advantage of the relationship.&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;vi&quot;&gt;@team&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Team&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;first&lt;/span&gt;
&lt;span class=&quot;vi&quot;&gt;@team&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;users&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# array of users&lt;/span&gt;

&lt;span class=&quot;vi&quot;&gt;@user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;first&lt;/span&gt;
&lt;span class=&quot;vi&quot;&gt;@user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;teams&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# array of teams&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
        <pubDate>Mon, 15 Jun 2015 00:00:00 -0500</pubDate>
        <link>http://brandonclapp.com/many-to-many-model-relationships-in-rails/</link>
        <guid isPermaLink="true">http://brandonclapp.com/many-to-many-model-relationships-in-rails/</guid>
        
        <category>Ruby</category>
        
        <category>Rails</category>
        
        <category>ActiveRecord</category>
        
        
        <category>Ruby on Rails</category>
        
      </item>
    
      <item>
        <title>What is gulp.js and why use it?</title>
        <description>&lt;p&gt;There’s no point in investing your time into learning a new tool if you don’t even know what problem it solves. Gulp solves the problem of &lt;strong&gt;repetition&lt;/strong&gt;. Many of the tasks that web developers find themselves doing over and over on a daily basis can be simplified by becoming automated. Automating repetitive tasks = more time to do non repetitive tasks = more productivity.&lt;/p&gt;

&lt;p&gt;Gulp is a javascript task runner that lets you automate tasks such as…&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Bundling and minifying libraries and stylesheets.&lt;/li&gt;
  &lt;li&gt;Refreshing your browser when you save a file.&lt;/li&gt;
  &lt;li&gt;Quickly running unit tests&lt;/li&gt;
  &lt;li&gt;Running code analysis&lt;/li&gt;
  &lt;li&gt;Less/Sass to CSS compilation&lt;/li&gt;
  &lt;li&gt;Copying modified files to an output directory&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;the-gulp-workflow&quot;&gt;The gulp workflow&lt;/h4&gt;

&lt;p&gt;Below is a common workflow for performing certain build operations.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;We start by defining a task that we would like to accomplish.&lt;/li&gt;
  &lt;li&gt;Within that task, a desired set of files are loaded into the gulp stream to be processed.
(Optional) Once files are in the stream, one or more modifications can be made to the files. Because the streams are processed in memory, no file - system writes to temporary directories between modifications are required.&lt;/li&gt;
  &lt;li&gt;Send the new (possibly modified) files to a specified destination&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So first, the original files go in, we optionally process modifications to the input files, then we copy the result of our stream to a destination directory.&lt;/p&gt;

&lt;h4 id=&quot;the-simple-gulp-api&quot;&gt;The simple gulp API&lt;/h4&gt;

&lt;p&gt;Using gulp is super simple because you don’t have to figure out how a complex API works in order to be productive with it. There are only 4 api’s in gulp!&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;API&lt;/th&gt;
      &lt;th&gt;Purpose&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;gulp.task&lt;/td&gt;
      &lt;td&gt;Define a task&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;gulp.src&lt;/td&gt;
      &lt;td&gt;Read files in&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;gulp.dest&lt;/td&gt;
      &lt;td&gt;Write files out&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;gulp.watch&lt;/td&gt;
      &lt;td&gt;Watch files for changes&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h4 id=&quot;installing-gulp-via-npm&quot;&gt;Installing gulp via npm&lt;/h4&gt;

&lt;p&gt;The npm package manager comes installed with Node.js. While node.js isn’t a requirement to use gulp, it does make demonstrating it a lot easier. I will be installing gulp from npm locally into my project. Make sure that you’re in your project’s root folder before running the command, otherwise your node modules will be downloaded into the wrong folder.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;myproject
npm install --save-dev gulp
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This will install the gulp node module locally to the project (as opposed to globally). The &lt;code class=&quot;highlighter-rouge&quot;&gt;--save-dev&lt;/code&gt; argument lets npm know to update it’s package.json file with a new devDependencies record. devDependencies will need to be resolved at development time, where as dependencies will need to be resolved at run time. Because gulp is a tool to aid us in development, it needs to be resolved at development time.&lt;/p&gt;

&lt;h4 id=&quot;creating-a-gulpfile&quot;&gt;Creating a gulpfile&lt;/h4&gt;

&lt;p&gt;A gulpfile is a file that will act as a manifest to define our tasks. Tasks that we want to execute will be found within this file. Whenever we run the command &lt;code class=&quot;highlighter-rouge&quot;&gt;gulp hello-world&lt;/code&gt; from the command line, we are telling gulp that we want to run the hello-world task within gulpfile.js.&lt;/p&gt;

&lt;p&gt;After creating gulpfile.js within the root of your project, add a basic tasks.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;gulp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;gulp&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;gulp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;task&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;hello-world&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;hello world&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;require&lt;/code&gt; is a function implemented by node (which is an implementation of the &lt;a href=&quot;http://wiki.commonjs.org/wiki/Modules/1.1.1&quot; target=&quot;_blank&quot;&gt;CommonJS spec&lt;/a&gt;) that will add references to node modules that we have installed. Once we make a reference to the gulp module, we can use it to create a task. Here, our task simply writes to the console window, but you could have it do any number of automated tasks.&lt;/p&gt;

&lt;h4 id=&quot;a-practical-example&quot;&gt;A practical example&lt;/h4&gt;

&lt;p&gt;A task to analyze all of your JavaScript files inside of a set of directories with JSHint and JSCS may look something like this. This example assumes that you have the module &lt;strong&gt;gulp-load-plugins&lt;/strong&gt; installed. This plugin will essentially wrap all of your gulp plugins (prefixed with gulp-) into one plugin so that you don’t have to have a require statement for every individual gulp module. You would also need to run &lt;code class=&quot;highlighter-rouge&quot;&gt;npm install&lt;/code&gt; for each of the packages that you wanted to utilizes. This task would be accessible through the use of &lt;code class=&quot;highlighter-rouge&quot;&gt;gulp analyze&lt;/code&gt; from the command line (while in your applications root directory where your gulpfile resides.)&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;gulp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;task&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;analyze&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;Analyzing code with JSHint and JSCS.&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;gulp&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;./src/scripts&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// glob pattern for all of my JS&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;// utilizes gulp-if and gulp-print to check for cmd args&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pipe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;plugins&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;verbose&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;plugins&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()))&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;// utilizes gulp-jscs to inspect JS&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pipe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;plugins&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;jscs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;// utilizes gulp-jshint to inspect JS&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pipe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;plugins&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;jshint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;// utilizes jshint-stylish to show the results&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pipe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;plugins&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;jshint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;reporter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;jshint-stylish&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;c1&quot;&gt;// utilizes gulp-util&#39;s log function&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;plugins&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;util&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;plugins&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;util&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;colors&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;blue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Similarly, you may create a gulp task (or set of gulp tasks) for cleaning directories and compiling less to CSS. Such a set of tasks may look like the following. This set of tasks also has it’s own set of dependencies, which would require using &lt;code class=&quot;highlighter-rouge&quot;&gt;npm install&lt;/code&gt; to get installed locally.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;clean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;done&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;Cleaning: &#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;plugins&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;util&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;colors&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;blue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// utilizes del node module&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;del&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;gulp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;task&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;clean-styles&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;files&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;./styles/*.css&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// glob pattern to any existing css&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;clean&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// cb is called because clean uses del,&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// which does not use gulp streams.&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 2nd param signifies task dependencies&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// in this case, clean-styles will run first.&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;gulp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;task&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;styles&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;clean-styles&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;Compiling Less --&amp;gt; CSS&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;gulp&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;./src/styles/*.less&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pipe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;plugins&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;less&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// utilizes gulp-less to compile less -&amp;gt; css&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;// utilizes gulp-autoprefixer to add&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// browser specific css prefixes&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pipe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;plugins&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;autoprefixer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;// copies the generated css to a destination folder.&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pipe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;gulp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;dest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;./styles/*.css&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Hopefully it’s obvious why taking the time to create gulp tasks for automating repetitive development tasks can increase productivity. Gulp has over 1470 (at the time of this article) (&lt;strong&gt;Edit on 5/29/16:&lt;/strong&gt; &lt;em&gt;Now 2429&lt;/em&gt;) plugins already created that you can take advantage of on the &lt;a href=&quot;http://gulpjs.com/plugins/&quot; target=&quot;_blank&quot;&gt;GulpJS Plugins&lt;/a&gt; page. In most cases, if you need to do something common, the plugin will already exist. If not, taking the time to do some research now may save from wasting time on repetitive tasks in the future.&lt;/p&gt;
</description>
        <pubDate>Fri, 10 Apr 2015 00:00:00 -0500</pubDate>
        <link>http://brandonclapp.com/what-is-gulp-js-and-why-use-it/</link>
        <guid isPermaLink="true">http://brandonclapp.com/what-is-gulp-js-and-why-use-it/</guid>
        
        <category>Build Automation</category>
        
        <category>Gulp.js</category>
        
        
        <category>Tools</category>
        
      </item>
    
      <item>
        <title>Using AngularJS services to broadcast messages between controllers</title>
        <description>&lt;p&gt;Two handy functions built into the angular.js api are the &lt;em&gt;$scope.broadcast&lt;/em&gt; and &lt;em&gt;$scope.emit&lt;/em&gt; functions. Both of these functions are similar in the sense that they allow you to propagate messages up or down your html controller nesting. &lt;strong&gt;Please note&lt;/strong&gt; that this applies to angular 1.x versions and does not apply to angular 2, as it is much different.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Emit&lt;/strong&gt; will allow you to propagate messages &lt;em&gt;up&lt;/em&gt; to controllers to which your current controller is nested within (in the markup).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Broadcast&lt;/strong&gt; will allow you to propagate messages &lt;em&gt;down&lt;/em&gt; to controllers to which are nested within your current controller (in the markup).&lt;/p&gt;

&lt;p&gt;Suppose you have two controllers, &lt;em&gt;ParentCtrl&lt;/em&gt; and &lt;em&gt;ChildCtrl&lt;/em&gt;. These two controllers are nested in your markup accordingly. The &lt;code class=&quot;highlighter-rouge&quot;&gt;div&lt;/code&gt; with &lt;code class=&quot;highlighter-rouge&quot;&gt;ng-controller=&quot;ParentCtrl&quot;&lt;/code&gt; is a parent of the &lt;code class=&quot;highlighter-rouge&quot;&gt;div&lt;/code&gt; with &lt;code class=&quot;highlighter-rouge&quot;&gt;ng-controller=&quot;ChildCtrl&quot;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Emitting from a child to a parent:&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// ** ChildCtrl Angular Controller **&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;$scope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;emitToParent&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;$scope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$emit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;somethingHappened&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;I clicked it&#39;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// ** ParentCtrl Angular Controller **&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;$scope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;somethingHappened&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// .. Do whatever you need to do.&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;the message that we sent: &#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Broadcasting from a parent to a child:&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// ** ParentCtrl Angular Controller **&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;$scope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;broadcastToChild&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;$scope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$broadcast&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;publish&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// ** ChildCtrl Angular Controller **&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;$scope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;publish&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// .. subscribe &amp;amp; do something&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;creating-a-service-to-broadcast&quot;&gt;Creating a service to broadcast&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;The problem&lt;/strong&gt;: Even though we can propagate up and down the html tree, we don’t have a way to send a broadcast to an element that is on the exact level, such as two &lt;code class=&quot;highlighter-rouge&quot;&gt;div&lt;/code&gt;’s that are not nested within each other that also have different controllers.&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ng-controller=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;searchCtrl&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;...&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ng-controller=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;someOtherCtrl&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;...&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;In order to keep our controllers a little bit cleaner, as well as solve the problem stated above, we can move the broadcasting logic into a service of it’s own.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// Services&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;angular&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;MyModule&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;factory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;broadcastService&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$rootScope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;$rootScope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$broadcast&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;factory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;searchService&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$scope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;broadcastService&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;search&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;searchCriteria&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// Do some kind of searching&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// then broadcast the results&lt;/span&gt;
            &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;results&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{};&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;broadcastService&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;search&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;results&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;From our controller, we would then use only our search service to do searching. The broadcasting is abstracted away from the controller and placed into the service layer.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;searchCtrl&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$scope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;searchService&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;$scope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onSearchClick&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;searchCriteria&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;searchService&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;search&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;searchCriteria&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// No broadcasting directly from controllers!&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The broadcastService uses the &lt;code class=&quot;highlighter-rouge&quot;&gt;$rootScope&lt;/code&gt; in order to broadcast the message. This means that all of our controllers throughout our application will be able to subscribe to the messages that it broadcasts.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;someOtherCtrl&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$scope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;$scope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;search&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// args is the search results&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// from the searchService&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
        <pubDate>Mon, 16 Mar 2015 00:00:00 -0500</pubDate>
        <link>http://brandonclapp.com/using-angularjs-services-to-broadcast-messages-between-controllers/</link>
        <guid isPermaLink="true">http://brandonclapp.com/using-angularjs-services-to-broadcast-messages-between-controllers/</guid>
        
        <category>AngularJS</category>
        
        <category>Front End</category>
        
        <category>Broadcast</category>
        
        <category>Emit</category>
        
        
        <category>AngularJS</category>
        
      </item>
    
      <item>
        <title>Connecting to a Cisco IPSec VPN on Mac OSX with a PCF File</title>
        <description>&lt;p&gt;When connecting to a Cisco VPN on Windows, we typically take the route of using third party VPN software such as the Cisco VPN client or Shrew Soft. Each of these products allow you to specify a .pcf file, which contains the VPN information, in order to connect. When trying to accomplish the same goal on Mac OSX, the process isn’t as straight forward, however, it also doesn’t require a third party client.&lt;/p&gt;

&lt;p&gt;In order to connect to a VPN from a Mac, you will need the following information.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;VPN host address&lt;/li&gt;
  &lt;li&gt;VPN group name&lt;/li&gt;
  &lt;li&gt;VPN group’s password&lt;/li&gt;
  &lt;li&gt;User name and password for your account on the VPN.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you have a .pcf file, the first three pieces of information can be found by opening the file in a text editor such as atom, sublime, or TextEdit. If you already have all four pieces of information, then you can skip this next part. Below is a small segment of the file.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Host=123.456.78.90
AuthType=1
GroupName=kerberos
GroupPwd=
enc_GroupPwd=595533KJL3KJ4L2K3J4LKJ2L...etc
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;You will need the &lt;strong&gt;&lt;em&gt;Host&lt;/em&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;em&gt;GroupName&lt;/em&gt;&lt;/strong&gt;, and &lt;strong&gt;&lt;em&gt;enc_GroupPwd&lt;/em&gt;&lt;/strong&gt; values from this password. There may be a possibility that the password isn’t even encoded. If this is the case, the group password may be under the GroupPwd setting.&lt;/p&gt;

&lt;p&gt;The &lt;em&gt;enc_GroupPwd&lt;/em&gt; value is actually an encoded version of the real VPN group password, but don’t worry, it isn’t very hard to crack. There is a tool online that does this specific job.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.unix-ag.uni-kl.de/~massar/bin/cisco-decode&quot; target=&quot;_blank&quot;&gt;Cisco VPNClient Password Decoder&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Paste the encoded group password from your .pcf file into that tool and you should see the decrypted version.&lt;/p&gt;

&lt;p&gt;Now that we have all of this information, go to &lt;strong&gt;System Preferences&lt;/strong&gt; &amp;gt; &lt;strong&gt;Network&lt;/strong&gt; &amp;gt; and click the &lt;strong&gt;+&lt;/strong&gt; sign in the bottom left hand corner to create a new service. Select &lt;strong&gt;VPN&lt;/strong&gt; as the interface type, followed by &lt;strong&gt;Cisco IPSec&lt;/strong&gt; as the VPN type. &lt;strong&gt;Service Name&lt;/strong&gt; is an arbitrary value that is only used as a label for the service.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/posts/content/vpn1.png&quot; alt=&quot;Select the interface&quot; target=&quot;_blank&quot; /&gt;&lt;/p&gt;

&lt;p&gt;After selecting &lt;strong&gt;Create&lt;/strong&gt;, you are ready to start filling in the details. The &lt;strong&gt;Server Address&lt;/strong&gt; is the host value that we extracted from the .pcf file earlier. The &lt;strong&gt;account name&lt;/strong&gt; is your account on the network that you are trying to connect to. For example, if account was &lt;em&gt;somedomain\bclapp&lt;/em&gt;, then I would fill in bclapp into this input. &lt;strong&gt;Password&lt;/strong&gt; is optional. If you don’t fill it out, the server will prompt you upon trying to connect every time.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/posts/content/vpn2.png&quot; alt=&quot;Populate server and account information&quot; target=&quot;_blank&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Next, select &lt;strong&gt;Authentication Settings&lt;/strong&gt;. Under &lt;em&gt;Machine Authentication&lt;/em&gt;, select &lt;strong&gt;Shared Secret&lt;/strong&gt; and put the decrypted group password into this input. Inside of the &lt;strong&gt;group name&lt;/strong&gt; input, put the group name from the .pcf file. Finally, select OK and attempt to connect.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/posts/content/vpn3.png&quot; alt=&quot;Add machine authentication&quot; target=&quot;_blank&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 15 Mar 2015 00:00:00 -0500</pubDate>
        <link>http://brandonclapp.com/connecting-to-a-cisco-ipsec-vpn-on-mac-osx-with-a-pcf-file/</link>
        <guid isPermaLink="true">http://brandonclapp.com/connecting-to-a-cisco-ipsec-vpn-on-mac-osx-with-a-pcf-file/</guid>
        
        <category>Cisco IPSec</category>
        
        <category>VPN</category>
        
        <category>Mac</category>
        
        
        <category>OS Tricks</category>
        
      </item>
    
      <item>
        <title>What is dependency injection and why is it useful?</title>
        <description>&lt;p&gt;A dependency is an external entity that a class, or function, needs to do it’s job. Just as I am writing this blog post, I also have dependencies on my computer. Remove the computer and I surely would not be able to finish the post.&lt;/p&gt;

&lt;p&gt;Injecting dependencies that a class needs is a good way to decouple our classes. Sure, any class can new up an object and call methods or access properties on that object, but doing so also convolutes that class with logic that doesn’t necessarily belong there. Injecting a classes dependencies is a good way to apply the &lt;strong&gt;single responsibility principal&lt;/strong&gt;, which promotes good object oriented design. If you’re not familiar with it, it simply states that every class should have responsibility over a single part of the functionality provided by the software, and that responsibility should be entirely encapsulated by the class.&lt;/p&gt;

&lt;p&gt;Consider the following example. Below, each class serves it’s own purpose and has it’s own job. Dependencies are injected into classes that need them. This is basically saying “give me the tools that I need, and I can do my job”.&lt;/p&gt;

&lt;div class=&quot;language-csharp highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Scratchpad&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Program&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;Microwave&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;microwave&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Microwave&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;Refrigerator&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;refrigerator&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Refrigerator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

            &lt;span class=&quot;c1&quot;&gt;// Dad&#39;s purpose is to make lunch.
&lt;/span&gt;            &lt;span class=&quot;n&quot;&gt;Dad&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dad&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Dad&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;microwave&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;refrigerator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

            &lt;span class=&quot;c1&quot;&gt;// Kid&#39;s purpose is to play.
&lt;/span&gt;            &lt;span class=&quot;c1&quot;&gt;// But they must eat first before they play.
&lt;/span&gt;            &lt;span class=&quot;n&quot;&gt;Kid&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kid&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Kid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dad&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

            &lt;span class=&quot;n&quot;&gt;kid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Play&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// Responsible for altering molecular structure of ingredients
&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;// to produce lunch
&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Microwave&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Lunch&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Zap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Ingredient&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ingredients&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;seconds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// Do a bunch of scientific stuff
&lt;/span&gt;            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Lunch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// Responsible for storing ingredients
&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Refrigerator&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Ingredient&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Ingredients&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Lunch&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Ingredient&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// Resonsible for making lunch.
&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Dad&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Microwave&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Microwave&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Refrigerator&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Refrigerator&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Dad&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Microwave&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;microwave&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Refrigerator&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;refrigerator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;Microwave&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;microwave&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;Refrigerator&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;refrigerator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Lunch&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;FixLunch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;Ingredient&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ingredients&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;GetIngredients&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Refrigerator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;Lunch&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lunch&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Microwave&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Zap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ingredients&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;60&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lunch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Ingredient&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;GetIngredients&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Refrigerator&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;refrigerator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// ... Open connection to refrigerator
&lt;/span&gt;            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;refrigerator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Ingredients&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// Responsible for playing.
&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Kid&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Dad&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Dad&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_hungry&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Kid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Dad&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dad&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;Dad&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dad&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Eat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;Lunch&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lunch&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Dad&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;FixLunch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// .. Eat the lunch... PickUpFork(), Chew() etc..
&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;_hungry&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Play&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_hungry&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;nf&quot;&gt;Eat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

            &lt;span class=&quot;c1&quot;&gt;// ... Have fun playing.
&lt;/span&gt;        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Here, I’m trying to adhere to the single responsibility principal. In the previous example, the &lt;strong&gt;Dad&lt;/strong&gt; class has the responsibility of making lunch. The &lt;strong&gt;Kid&lt;/strong&gt; class only has the responsibility of playing, but first she must eat lunch. The Kid class doesn’t know how to make lunch, nor is it the Kid’s responsibility to make lunch (in this example) so the Dad is the dependency. So that the Kid doesn’t need to know the complexities of making lunch, we keep this logic separate in the Dad class.&lt;/p&gt;

&lt;p&gt;Dad knows how to make lunch, but he also has dependencies of his own. He must consult with the &lt;strong&gt;Refrigerator&lt;/strong&gt; and &lt;strong&gt;Microwave&lt;/strong&gt; classes in order to help in the process. Dad doesn’t need to know the complexities of vibrating atoms to cook food or store cold sandwich meat, so these responsibilities are also outsourced to the Microwave and Refrigerator classes.&lt;/p&gt;

&lt;p&gt;Each class is properly injected with the dependencies that it requires to perform it’s job. When we create a new Dad object, we specify the Refrigerator and Microwave classes that will help him fulfill his responsibility of making lunch. When we create a new Kid object, we supply her with the Dad object that will help her eat so that she can fulfill her responsibility.&lt;/p&gt;

&lt;h4 id=&quot;increasing-dependency-injection-flexibility-with-interfaces&quot;&gt;Increasing dependency injection flexibility with interfaces&lt;/h4&gt;

&lt;p&gt;By “demanding” the dependencies in the constructor, you make your classes more flexible - especially if they are interfaces and not concrete implementations. Why is this, you may ask? Suppose that the Dad class constructor in the example above required IMicrowave and IRefrigerator interfaces instead of the concrete implementations to be created. Now suppose that the family got a complete kitchen makeover and replaced their appliances. In the real world, this may be the equivalent to creating a new version of a library that changes how it’s responsibilities are implemented. The Microwave and Refrigerator just got upgraded to new implementations. There are a couple of things to be said here.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;If Dad had been constructing the Microwave and Refrigerator objects internally, a concrete implementation would have had to been created before he could make lunch. This means that when the new kitchen appliance models (concrete implementations) comes along, the creation of the appliances need to be changed in the Dad class. Imagine if the Microwave and Refrigerator were being used by the entire family and/or there were more than two appliances in the kitchen.&lt;/li&gt;
&lt;li&gt;If Dad&#39;s constructor now takes interfaces instead of concrete implementations, nothing inside of the Dad class needs to change. The new model (concrete implementation) of IMicrowave should still know how to *Zap()* and the new concrete of IRefrigerator should still know how to hold an array of *Ingredient*&#39;s. So long as the new classes still implement the same interface, there shouldn&#39;t be any breaking changes.&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;why-should-i-use-dependency-injection&quot;&gt;Why should I use dependency injection?&lt;/h4&gt;

&lt;p&gt;Dependency injection is a pattern at your disposal. Like all tools and approaches, use it when it’s appropriate. Ideally, it’s used to promote testability and easy maintenance.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pro’s&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Flexibility&lt;/li&gt;
  &lt;li&gt;Testability&lt;/li&gt;
  &lt;li&gt;Easier maintenance&lt;/li&gt;
  &lt;li&gt;Decouples classes (which is a reason for the previous 3 points)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Con’s&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Creating instances of your classes can become cumbersome, especially when your classes grow to too many responsibilities and have too many dependencies. If not maintained, it can become a nightmare.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Because of the con listed above, dependency injection frameworks were created to help with the creation of dependency objects. This is also known as &lt;strong&gt;inversion of control&lt;/strong&gt;, which I’ll cover in a follow up post.&lt;/p&gt;
</description>
        <pubDate>Thu, 12 Mar 2015 00:00:00 -0500</pubDate>
        <link>http://brandonclapp.com/what-is-dependency-injection-and-why-is-it-useful/</link>
        <guid isPermaLink="true">http://brandonclapp.com/what-is-dependency-injection-and-why-is-it-useful/</guid>
        
        <category>Dependency Injection</category>
        
        <category>Design Pattern</category>
        
        
        <category>Design Patterns</category>
        
      </item>
    
      <item>
        <title>What is a Singleton? How do I implement it? And when do I use it?</title>
        <description>&lt;p&gt;This explanation will use C# to explain the basic ideas of a singleton and the singleton pattern. Keep in mind that if you’re using a programming language that doesn’t support classes, this explanation may require a bit more analysis.&lt;/p&gt;

&lt;h4 id=&quot;what-is-a-singleton&quot;&gt;What is a singleton?&lt;/h4&gt;

&lt;p&gt;A singleton is simply a class which only allows a single instance. You can’t new up instances of a singleton class. Static classes in C# are a good example of singleton behavior because, in most cases, there can only ever be one instance of a static class.&lt;/p&gt;

&lt;div class=&quot;language-csharp highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Scratchpad&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Program&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// This is valid.
&lt;/span&gt;            &lt;span class=&quot;n&quot;&gt;Logger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Yo&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

            &lt;span class=&quot;c1&quot;&gt;// This is a compile time error.
&lt;/span&gt;            &lt;span class=&quot;n&quot;&gt;Logger&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;singleton&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Logger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Yo&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Logger&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// Logging!
&lt;/span&gt;        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Static classes do not have constructors, are sealed (you can’t derive from them), and are abstract (you can’t instantiate it directly). While static classes and singleton implementations are very similar in behavior, there are differences. The differences can be &lt;a href=&quot;http://stackoverflow.com/a/519536/1730061&quot; target=&quot;_blank&quot;&gt;summed up by Jon Skeet&lt;/a&gt; as&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;A singleton allows access to a single created instance - that instance
(or rather, a reference to that instance) can be passed as a parameter
to other methods, and treated as a normal object.
A static class allows only static methods.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If you only need static methods from your singleton, then just use a static class to expose these static methods - There is no reason to implement your own singleton. However, if you need to be able to use your singleton as if it were a regular instance of a class, then read on.&lt;/p&gt;

&lt;p&gt;The single instance of the class will be distributed from logic internal to our singleton implementation. It must ensure that one, and only one, instance is ever created. Now that we know vaguely what a singleton is, lets look at how we might implement one.&lt;/p&gt;

&lt;h4 id=&quot;how-do-i-implement-a-singleton&quot;&gt;How do I implement a singleton?&lt;/h4&gt;

&lt;div class=&quot;language-csharp highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Scratchpad&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Program&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// The first time, we get a new instance of Instance
&lt;/span&gt;            &lt;span class=&quot;n&quot;&gt;Logger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Instance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Yo&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

            &lt;span class=&quot;c1&quot;&gt;// The second time,
&lt;/span&gt;            &lt;span class=&quot;c1&quot;&gt;// Instance is a references to the first one created.
&lt;/span&gt;            &lt;span class=&quot;n&quot;&gt;Logger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Instance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Hi there&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Logger&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Logger&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;instance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Logger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// Private constructor,
&lt;/span&gt;            &lt;span class=&quot;c1&quot;&gt;// which cannot be called to create new instances.
&lt;/span&gt;            &lt;span class=&quot;c1&quot;&gt;// Stuff that should only happen once
&lt;/span&gt;        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Logger&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Instance&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;get&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;c1&quot;&gt;// If our private instance field is null
&lt;/span&gt;                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;instance&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;c1&quot;&gt;// new up an instance
&lt;/span&gt;                    &lt;span class=&quot;c1&quot;&gt;// and store it in our private field.
&lt;/span&gt;                    &lt;span class=&quot;n&quot;&gt;instance&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Logger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;instance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// Logging.
&lt;/span&gt;        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Here, our &lt;strong&gt;Logger&lt;/strong&gt; class has a private constructor. This restricts outside sources from creating &lt;em&gt;new&lt;/em&gt; instances of the class. The &lt;code class=&quot;highlighter-rouge&quot;&gt;Instance&lt;/code&gt; property on the Logger class has a getter which holds the logic for how the entire class is referenced. First, we check to see if &lt;code class=&quot;highlighter-rouge&quot;&gt;instance&lt;/code&gt;, a private field of type Logger, is null. If it is, then we’re going to assume that it hasn’t been accessed before, and therefore it is okay to new up an instance of the Logger class and store it into the private field.&lt;/p&gt;

&lt;p&gt;The next time that the getter is called, the private field, &lt;code class=&quot;highlighter-rouge&quot;&gt;instance&lt;/code&gt;, will no longer be null. In fact, it will refer to the Logger object that we created the first time that it was accessed. Rather than creating a new instance again, the original is returned.&lt;/p&gt;

&lt;p&gt;While this conveys the basic idea of what a singleton is supposed to do, there is still one problem. Concurrency. &lt;strong&gt;The previous code only works for a single thread.&lt;/strong&gt; Keep in mind, though, that even if you don’t intend to use the code that you write in a multi-threaded fashion, that doesn’t stop others from doing so.&lt;/p&gt;

&lt;h4 id=&quot;threading-with-singletons&quot;&gt;Threading with Singleton’s&lt;/h4&gt;

&lt;p&gt;In the previous code example, we created an implementation for a singleton, however, we didn’t account for what would happen if multiple threads were trying to access our &lt;code class=&quot;highlighter-rouge&quot;&gt;Instance&lt;/code&gt; property at the same time. There is a possibility that two threads will attempt to check if the conditional statement&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;instance == null
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;is true at the same time. Suppose that this line is being run by two (or more) threads at the same time, but neither thread has actually created a new instance and assigned it to the private &lt;code class=&quot;highlighter-rouge&quot;&gt;instance&lt;/code&gt; field. The outcome of this scenario would result in multiple instances of our singleton, meaning that our singleton implementation currently is not thread safe.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://blogs.msdn.com/b/ericlippert/archive/2009/10/19/what-is-this-thing-you-call-thread-safe.aspx&quot; target=&quot;_blank&quot;&gt;What is this thing you call thread safe?&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;language-csharp highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Logger&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;readonly&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mutex&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Logger&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;instance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Logger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Logger&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Instance&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;get&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;lock&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mutex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;c1&quot;&gt;// Only one thread can get into this
&lt;/span&gt;                &lt;span class=&quot;c1&quot;&gt;// block of code at a time now.
&lt;/span&gt;                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;instance&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;instance&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Logger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;instance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// Doing logging.
&lt;/span&gt;    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;To fix this issue, we first start by creating a static readonly field object named mutex. If you’re not familiar with what a mutex is, it’s discussed in &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/ms173179.aspx&quot; target=&quot;_blank&quot;&gt;Thread Synchronization&lt;/a&gt; on MSDN. The following is the best definition that I’ve been able to find.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Mutex&lt;/code&gt;&lt;/strong&gt; - A mutual exclusion object that allows multiple threads to synchronize access to a shared resource. A mutex has two states; locked and unlocked. Once a mutex has been locked by a thread, other threads attempting to lock it will block (stop until the lock has been removed). When the locking thread unlocks (releases) the mutex, one of the blocked threads will acquire (lock) it and proceed.&lt;/p&gt;

&lt;p&gt;Locking can get very complicated, and I’m by no means the person that you want explaining it. The point is, though, that using singleton’s with multiple threads can present it’s own set of problems, and in most cases, even make the singleton implementation more work than it’s worth. In most cases, a static class with static methods is the easier approach.&lt;/p&gt;

&lt;h4 id=&quot;when-to-use-a-singleton&quot;&gt;When to use a singleton&lt;/h4&gt;

&lt;p&gt;Singletons and static classes with static data members are nothing more than global variables with fancy packaging. When you get right down to it, this is all a singleton is. There are few cases when global objects make sense. One scenario that is commonly used for singleton’s is logging. It wouldn’t make much sense to create multiple instances of the same logger, right? In many cases, you start with the idea that you’ll only ever need one logger, but what happens when you suddenly need an email logger and a chat logger? Consider that you’re using a singleton to reference your database. What happens when another database gets added to your project? Also, few objects that we create will be used everywhere within our application, so having this global behavior may not make sense in most cases. Because of it’s global nature and not adhering to an object oriented paradigm, some also consider it to be an anti-pattern. Instead, an easier approach may be to use regular classes that can be instantiated and simply only instantiate them once.&lt;/p&gt;

&lt;h4 id=&quot;summary&quot;&gt;Summary&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Singleton’s are often thought of to be an anti-pattern.&lt;/li&gt;
  &lt;li&gt;The general consensus is that singleton’s are bad.
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/1020312/are-singletons-really-that-bad&quot; target=&quot;_blank&quot;&gt;Are singleton’s really that bad?&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/137975/what-is-so-bad-about-singletons&quot; target=&quot;_blank&quot;&gt;What is so bad about singletons?&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Implementing a singleton requires additional threading considerations.&lt;/li&gt;
  &lt;li&gt;In most cases, you don’t need to implement your own singleton. Static classes with static methods work just as well.&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Tue, 10 Mar 2015 00:00:00 -0500</pubDate>
        <link>http://brandonclapp.com/what-is-a-singleton-how-do-i-implement-it-and-when-do-i-use-it/</link>
        <guid isPermaLink="true">http://brandonclapp.com/what-is-a-singleton-how-do-i-implement-it-and-when-do-i-use-it/</guid>
        
        <category>Singleton</category>
        
        <category>Design Pattern</category>
        
        
        <category>Design Patterns</category>
        
      </item>
    
      <item>
        <title>Creating and importing a map for Phaser using Tiled</title>
        <description>&lt;p&gt;Phaser is an HTML5 game engine that comes with a lot of cool features that I’ve yet to figure out. Here, I’ll give you a walk through of designing a map utilizing a tool called &lt;strong&gt;Tiled&lt;/strong&gt; and then bringing that map into your phaser project.&lt;/p&gt;

&lt;h4 id=&quot;create-the-phaser-game-object&quot;&gt;Create the Phaser Game object&lt;/h4&gt;

&lt;p&gt;I first set up some basic project scaffolding within phaser, such as setting up the phaser game object, which will actually represent the game within our browser.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Game&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_width&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;innerWidth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_height&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;innerHeight&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;game&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Phaser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Game&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Phaser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;AUTO&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;preload&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;preload&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;update&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;Game&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prototype&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;preload&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Game&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;If you’re not familiar with phaser, what the above code will effectively do is set up a phaser game object with a width and height of the user’s viewable screen and wire up the event handlers that will be called when phaser calls it’s preload, create, and update events. We simply using the overload of the phaser &lt;a href=&quot;http://docs.phaser.io/Phaser.Game.html&quot; target=&quot;_blank&quot;&gt;Game class&lt;/a&gt; that takes 5 parameters.&lt;/p&gt;

&lt;h4 id=&quot;create-your-tilemap-using-tiled&quot;&gt;Create your tilemap using Tiled&lt;/h4&gt;

&lt;p&gt;There is a great tool called &lt;a href=&quot;http://www.mapeditor.org/&quot; target=&quot;_blank&quot;&gt;Tiled Map Editor&lt;/a&gt;, which will allow you to create orthogonal, isometric, and staggered maps. I’ll be demonstrating the basics of using this tool using some free graphics from Open Game Art. Save the following sprite sheet and download the map editor specified above.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/images/posts/content/terrain_atlas.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;/assets/images/posts/content/terrain_atlas.png&quot; alt=&quot;Terrain Atlas&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After downloading and installing Tiled, open it up. At first, the UI can seem a little overwhelming if you don’t know what you’re looking at. We’ll start by first creating a new map by pressing the &lt;em&gt;New&lt;/em&gt; icon in the upper left hand corner. We’ll use the default settings, which specify that our map should have an Orthogonal orientation, should be 100 tiles wide by 100 tiles long, and that our tile size will be 32x32 pixels.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/posts/content/tiled_new_map.png&quot; alt=&quot;Tiled New Map&quot; /&gt;&lt;/p&gt;

&lt;p&gt;You should now notice on the right hand side of the screen, under the pane titled &lt;strong&gt;Layers&lt;/strong&gt; that there is an entry named &lt;em&gt;Tile Layer 1&lt;/em&gt;. Go ahead and rename this layer to &lt;em&gt;MyTerrain&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/posts/content/tiled_terrain_layer.png&quot; alt=&quot;Tiled New Map&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now that we have a layer to draw on, lets import the spritesheet that we saved earlier into our map editor. To do this, click the &lt;em&gt;New Tileset&lt;/em&gt; icon in the &lt;strong&gt;Tilesets&lt;/strong&gt; pane. Provide a name for your new tiletset and browse for the image containing our terrain graphics.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/posts/content/tiled_create_new_tileset.png&quot; alt=&quot;Tiled New Map&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Upon creating our new tileset, you should see your image loaded into the tileset pane, where you can select one or more tiles to paint with. Select a grass tile from the tileset pane and use the fill tool to fill the entire map.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/posts/content/tiled_painting_texture.png&quot; alt=&quot;Tiled Painting Texture&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Use the stamp brush at the top, along with the tiles in our tilemap to create your map on the created layer. Feel free to create additional layers to draw on. Each layer has it’s own properties, which are changeable in the bottom pane.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/posts/content/tiled_after_drawn.png&quot; alt=&quot;Tiled after drawn&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Next, we need to export the map. Go to File &amp;gt; Export As &amp;gt; and save the file as type &lt;strong&gt;json&lt;/strong&gt;. For the sake of the tutorial, I’ll be naming this file firstMap. Doing this will produce a firstMap.json file that will provide phaser with the information necessary to take a single image and piece it together by individual 32x32px tiles.&lt;/p&gt;

&lt;h4 id=&quot;importing-the-map-into-phaser&quot;&gt;Importing the map into Phaser&lt;/h4&gt;

&lt;p&gt;Lets review what we’ve done so far. First we created the basic foundation for our phaser project by using phaser’s Game class. We wired up the event handlers that will take care of the preload, create, and update events, however we’ve yet to fill in our logic for these methods. We’ve used the Tiled Map Editor to create a basic map for phaser and we have exported that tilemap as a json file that is ready to be consumed by phaser.&lt;/p&gt;

&lt;p&gt;Lets start by telling phaser to load our image and tilemap resources when it starts. To do so, add the following code (lines 2 and 3) to the preload method that we created earlier. Change the paths that I have provided to the paths where your json and png files reside.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;preload&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;game&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;load&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tilemap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;MyTilemap&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;/images/maps/firstMap.json&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Phaser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Tilemap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;TILED_JSON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;game&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;load&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;tiles&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;/images/terrain_atlas.png&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;What this will first do is tell the game object to load the tilemap firstMap.json and give it an alias as MyTilemap, which we’ll be able to refer to it later with.&lt;/p&gt;

&lt;p&gt;Secondly, we tell the game object to load the image that we used to create our map, &lt;em&gt;terrain_atlas.png&lt;/em&gt;. If you’ll recall, &lt;em&gt;tiles&lt;/em&gt; is the name that we provided to the map editor when creating our tileset, as it’s important that the first parameter of this call matches the name of the tileset that you created. Loading these objects up front, in our preload function, will cache them for when we need to access them later.&lt;/p&gt;

&lt;p&gt;Next, we’ll set up the create method to create the map.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// Load the map.&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;game&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tilemap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;MyTilemap&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addTilesetImage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;tiles&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;tiles&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;nx&quot;&gt;layer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createLayer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;MyTerrain&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;layer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;resizeWorld&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;layer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;wrap&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cursors&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;game&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;keyboard&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createCursorKeys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Finally, we’ll add some logic in our update method to handle the keyboard input that we added above in our create method. This will allow us to use the arrows keys to move within the map from the browser.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cursors&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isDown&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;game&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;camera&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cursors&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;right&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isDown&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;game&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;camera&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cursors&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;up&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isDown&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;game&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;camera&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cursors&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;down&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isDown&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;game&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;camera&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Load the game in your browser, and if all is correct then you should see your map displayed within your browser, like so.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/posts/content/tiled_map_in_browser.png&quot; alt=&quot;Tiled New Map&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 08 Mar 2015 00:00:00 -0600</pubDate>
        <link>http://brandonclapp.com/creating-and-importing-a-map-for-phaser-using-tiled/</link>
        <guid isPermaLink="true">http://brandonclapp.com/creating-and-importing-a-map-for-phaser-using-tiled/</guid>
        
        <category>PhaserJS</category>
        
        <category>Game Dev</category>
        
        
        <category>Game Development</category>
        
      </item>
    
  </channel>
</rss>
